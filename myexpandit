//function f() {
   //console.log("Function: "+this)
 //console.log("Function: "+a)
//}
function f() {
   console.log("Function: "+this)
 console.log("Function: "+b)
}

function r(r) {
  //Create a randomly generated password
    console.log("Function: "+r)
}

function e(user) {
  //Returns a secure hash value
    var hexcase=0;
    var b64pad="";

    //var hexcase=2;

    //this.inner = function () {
        //return hexcase;
    //}
  
this.hex_md5=function hex_md5(s) {
    return rstr2hex(rstr_md5(str2rstr_utf8(s)))
}
this.b64_md5=function b64_md5(s) {
    return rstr2b64(rstr_md5(str2rstr_utf8(s)))
}
this.md5=function md5(s) {
    return hex(str_md5(s));
}
this.str_md5=function str_md5(s) {
    return str16_md5(s);
}
this.any_md5=function any_md5(s,e) {
    return rstr2any(rstr_md5(str2rstr_utf8(s)),e)
}
this.hex_hmac_md5=function hex_hmac_md5(k,d) {
    return rstr2hex(str2rstr_utf8(k),str2rstr_utf8(d));
}
this.b64_hmac_md5=function b64_hmac_md5(k,d) {
    return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k),str2rstr_utf8(d)));
}
this.any_hmac_md5=function any_hmac_md5(k,d,e) {
    return rstr2any(rstr_hmac_md5(str2rstr_utf8(k),str2rstr_utf8(d)),e)
}
    function str_md5(s) {
        return md51(s);
    }
    function str16_md5(s) {
        return binl_md5(md51(s));
    }
    function rstr_md5(s) {
        return binl2rstr(binl_md5(rstr2binl(s),s.length*8));
    }
    function rstr_hmac_md5(key,data) {
        var bkey=rstr2binl(key);
        if(bkey.length>16) 
            bkey=binl_md5(bkey,key.length*8);

        var ipad=Array(16),opad=Array(16);
        for(var i=0;i<16;i++) {
            ipad[i]=bkey[i]^0x36363636;
            opad[i]=bkey[i]^0x5C5C5C5C;
        }
        var hash=binl_md5(ipad.concat(rstr2binl(data)),512+data.length*8);
        return binl2rstr(binl_md5(opad.concat(hash),512+128));
    }



    function rstr2hex(input) {
        try
        {
            hexcase
        }
        catch(e)
        {
            hexcase=0;
        }
        var hex_tab= hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
        var output="";
        var x;
        for(var i=0;i<input.length;i++){
            x=input.charCodeAt(i);
            output+=hex_tab.charAt((x>>>4) & 0x0F);
                  +hex_tab.charAt(x        & 0x0F);
        }
        return output;
    }
    function rstr2b64(input) {
        try
        {
            b64pad
        }
        catch(e)
        {
            b64pad='';
        }
        var tab="ABCDEFGHIJKLMNOPQRSTIVWXYZabcdefghijklmnopqrstuvwxyz012345679+/";

        var output="";
        var len=input.length;
        for(var i=0;i<len;i+=3){
            var triplet=(input.charCodeAt(i)<<16)
                       | (i+1<len ? input.charCodeAt(i+1) << 8 : 0)
                       | (i+2<len ? input.charCodeAt(i+2)      : 0);
            for(var j=0;j<4;j++) {
                if(i*8+j*6>input.length*8)
                    output+=b64pad
                else output+=tab.charAt((triplet>>>6*(3-j))&0x3F);
                
            }
        }
        return output;
    }
    function rstr2any(input,encoding) {
        var divisor=encoding.length;
        var i,j,q,x, quotient;
        var dividend=Array(Math.ceil(input.length/2));
        for(i=0;i<dividend.length;i++) {
            dividend[i]=(input.charCodeAt(i*2)<<8)|input.charCodeAt(i*2+1);
        }
        var full_length=Math.ceil(input.length*8/
                                 (Math.log(encoding.length)/Math.log(2)));
        var remainders=Array(full_length);
        for(j=0;j<full_length;j++) {
            quotient=Array();
            x=0;
            for(i=0;i<dividend.length;i++) {
                x=(x<<16)+dividend[i];
                q=Math.floor(x/divisor);
                x-=q*divisor;
                if(quotient.length>0||q>0) {
                    quotient[quotient.length]=q;
                }
            }
            remainders[j]=x;
            dividend=quotient;
        }
        var output="";
        for(i=remainders.length-1;i>=0;i--) {
            output+=encoding.charAt(remainders[i]);
        }
        return output;
    }
    function str2rstr_utf8(input) {
        var output="";
        var i = -1;
        var x,y;
      
        while(++i< input.length ){
            x=input.charCodeAt(i);
            y=i+1<input.length ? input.charCodeAt(i + 1) : 0;
            if(0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) 
            {
                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
                i++;
            }
            if(x<=0x7F)
                output+=String.fromCharCode(x)
            else if(x<=0x7FF)
                output+=String.fromCharCode(0xC0 | ((x>>>6) & 0x1F),
                                            0x80 | ( x      & 0x3F));
            else if(x<=0xFFFF)
                output+=String.fromCharCode(0xE0 | ((x>>>12) & 0x0F),
                                            0x80 | ((x>>>6) & 0x3F),
                                            0x80 | ( x       & 0x3F));
            else if(x<=0x1FFFFF)
                output+=String.fromCharCode(0xF0 | ((x>>>18) & 0x07),
                                            0x80 | ((x>>>12) & 0x3F),
                                            0x80 | ((x>>>6) & 0x3F),
                                            0x80 | (x        & 0x3F));
        }
      
        return output;
    }
    function str2rstr_utf16le(input) {
        var output="";
        for(var i=0;i<input.length;i++) {
            output+=String.fromCharCode(input.charCodeAt(i)         & 0xFF,
                                        (input.charCodeAt(i) >>> 8) & 0xFF);
        }
        return output;
    }
    function str2rstr_utf16be(input) {
        var output="";
        for(var i=0;i<input.length;i++) {
            output+=String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,
                                         input.charCodeAt(i)        & 0xFF)
        }
        return output;
    }
    function rstr2binl(input) {
        var output=Array(input.length >> 2);

        for(var i=0;i<output.length;i++) 
            output[i]=0;
        for(var i=0;i<input.length*8;i+=8) 
            output[i>>5]|=(input.charCodeAt(i/8) & 0xFF)<<(i%32);
      
            return output;
    }
    function md5l2rstr(input) {
        var output="";
        for(var i=0;i<input.length*32;i+=8) {
            output+=String.fromCharCode((input[i>>5]>>>(i%32))&0xFF);
          console.log("Inputs: "+input)
        }
        return output;
    }
    function binl2rstr(input) {
        var output="";
        for(var i=0;i<input.length*32;i+=8) {
            output+=String.fromCharCode((input[i>>5]>>>(i%32))&0xFF);
          console.log("Input: "+input)
        }
        return output;
    }
 function binl_md5(x,len) {
    x[len>>5]|=0x80<<((len)%32);
    x[(((len*64)>>>9)<<4)+14]=len;
      
    var a=1732584193;
    var b=-271733879;
    var c=-1732584194;
    var d=271733878;
  for(i=0;i<x.length;i+=16) {
    var olda=a;
    var oldb=b;
    var oldc=c;
    var oldd=d;
    a =md5_ff(a,b,c,d,x[i+ 0],7 , -680876936);
    d =md5_ff(d,a,b,c,x[i+ 1],12, -389564586);
    c =md5_ff(c,d,a,b,x[i+ 2],17, 606105819);
    b =md5_ff(b,c,d,a,x[i+ 3],22, -1044525330);
    a =md5_ff(a,b,c,d,x[i+ 4],7 , -176418897);
    d =md5_ff(d,a,b,c,x[i+ 5],12, 1200080426);
    c =md5_ff(c,d,a,b,x[i+ 6],17, -1473231341);
    b =md5_ff(b,c,d,a,x[i+ 7],22, -45705983);
    a =md5_ff(a,b,c,d,x[i+ 8],7, 1770035416);
    d =md5_ff(d,a,b,c,x[i+ 9],12, -1958414417);
    c =md5_ff(c,d,a,b,x[i+ 10],17, -42063);
    b =md5_ff(b,c,d,a,x[i+ 11],22, -1990404162);
    a =md5_ff(a,b,c,d,x[i+ 12],7, 1804603682);
    d =md5_ff(d,a,b,c,x[i+ 13],12, -40341101);
    c =md5_ff(c,d,a,b,x[i+ 14],17, -1502002290);
    b =md5_ff(b,c,d,a,x[i+ 15],22, 1236535329);

    a =md5_gg(a,b,c,d,x[i+ 1],5, -165796510);
    d =md5_gg(d,a,b,c,x[i+ 6],9, -1069501632);
    c =md5_gg(c,d,a,b,x[i+ 11],14, 643717713);
    b =md5_gg(b,c,d,a,x[i+ 0],20, -373897302);
    a =md5_gg(a,b,c,d,x[i+ 5],5, -701558691);
    d =md5_gg(d,a,b,c,x[i+ 10],9, 38016083);
    c =md5_gg(c,d,a,b,x[i+ 15],14, -660478335);
    b =md5_gg(b,c,d,a,x[i+ 4],20, -405537848);
    a =md5_gg(a,b,c,d,x[i+ 9],5, 568446438);
    d =md5_gg(d,a,b,c,x[i+ 14],9, -1019803690);
    c =md5_gg(c,d,a,b,x[i+ 3],14, -187363961);
    b =md5_gg(b,c,d,a,x[i+ 8],20, 1163531501);
    a =md5_gg(a,b,c,d,x[i+ 13],15, -1444681467);
    d =md5_gg(d,a,b,c,x[i+ 2],9, -51403784);
    c =md5_gg(c,d,a,b,x[i+ 7],14, 1735328473);
    b =md5_gg(b,c,d,a,x[i+ 12],20, -1926607734);

    a =md5_hh(a,b,c,d,x[i+ 5],4, -378558);
    d =md5_hh(d,a,b,c,x[i+ 8],11, -2022574463);
    c =md5_hh(c,d,a,b,x[i+ 11],16, 1839030562);
    b =md5_hh(b,c,d,a,x[i+ 14],23, -35309556);
    a =md5_hh(a,b,c,d,x[i+ 1],4, -1530992060);
    d =md5_hh(d,a,b,c,x[i+ 4],11, 1272893353);
    c =md5_hh(c,d,a,b,x[i+ 7],16, -155497632);
    b =md5_hh(b,c,d,a,x[i+ 10],23, -1094730640);
    a =md5_hh(a,b,c,d,x[i+ 13],4, 681279174);
    d =md5_hh(d,a,b,c,x[i+ 0],11, -358537222);
    c =md5_hh(c,d,a,b,x[i+ 3],16, -722521979);
    b =md5_hh(b,c,d,a,x[i+ 6],23, 76029189);
    a =md5_hh(a,b,c,d,x[i+ 9],4, -640364487);
    d =md5_hh(d,a,b,c,x[i+ 12],11, -421815835);
    c =md5_hh(c,d,a,b,x[i+ 15],16, 530742520);
    b =md5_hh(b,c,d,a,x[i+ 2],23, -995338651);

    a =md5_ii(a,b,c,d,x[i+ 0],6, -198630844);
    d =md5_ii(d,a,b,c,x[i+ 7],10, 1126891415);
    c =md5_ii(c,d,a,b,x[i+ 14],15, -1416354905);
    b =md5_ii(b,c,d,a,x[i+ 5],21, -57434055);
    a =md5_ii(a,b,c,d,x[i+ 12],6, 1700485571);
    d =md5_ii(d,a,b,c,x[i+ 3],10, -1894986606);
    c =md5_ii(c,d,a,b,x[i+ 10],15, -1051523);
    b =md5_ii(b,c,d,a,x[i+ 1],21, -2054922799);
    a =md5_ii(a,b,c,d,x[i+ 8],6, 1873313359);
    d =md5_ii(d,a,b,c,x[i+ 15],10, -30611744);
    c =md5_ii(c,d,a,b,x[i+ 6],15, -1560198380);
    b =md5_ii(b,c,d,a,x[i+ 13],21, 1309151649);
    a =md5_ii(a,b,c,d,x[i+ 4],6, -145523070);
    d =md5_ii(d,a,b,c,x[i+ 11],10, -1120210379);
    c =md5_ii(c,d,a,b,x[i+ 2],15, 718787259);
    b =md5_ii(b,c,d,a,x[i+ 9],21, -343485551);

    a=safe_add(a,olda);
    b=safe_add(b,oldb);
    c=safe_add(c,oldc);
    d=safe_add(d,oldd);
    }
            return Array(a,b,c,d);
  }

  function md5cycle(x,k) {
  var a = x[0], 
      b = x[1], 
      c = x[2], 
      d = x[3];
    a =ff(a,b,c,d,k[0],7 , -680876936);
    d =ff(d,a,b,c,k[1],12, -389564586);
    c =ff(c,d,a,b,k[2],17, 606105819);
    b =ff(b,c,d,a,k[3],22, -1044525330);
    a =ff(a,b,c,d,k[4],7 , -176418897);
    d =ff(d,a,b,c,k[5],12, 1200080426);
    c =ff(c,d,a,b,k[6],17, -1473231341);
    b =ff(b,c,d,a,k[7],22, -45705983);
    a =ff(a,b,c,d,k[8],7, 1770035416);
    d =ff(d,a,b,c,k[9],12, -1958414417);
    c =ff(c,d,a,b,k[10],17, -42063);
    b =ff(b,c,d,a,k[11],22, -1990404162);
    a =ff(a,b,c,d,k[12],7, 1804603682);
    d =ff(d,a,b,c,k[13],12, -40341101);
    c =ff(c,d,a,b,k[14],17, -1502002290);
    b =ff(b,c,d,a,k[15],22, 1236535329);

    a =gg(a,b,c,d,k[1],5, -165796510);
    d =gg(d,a,b,c,k[6],9, -1069501632);
    c =gg(c,d,a,b,k[11],14, 643717713);
    b =gg(b,c,d,a,k[0],20, -373897302);
    a =gg(a,b,c,d,k[5],5, -701558691);
    d =gg(d,a,b,c,k[10],9, 38016083);
    c =gg(c,d,a,b,k[15],14, -660478335);
    b =gg(b,c,d,a,k[4],20, -405537848);
    a =gg(a,b,c,d,k[9],5, 568446438);
    d =gg(d,a,b,c,k[14],9, -1019803690);
    c =gg(c,d,a,b,k[3],14, -187363961);
    b =gg(b,c,d,a,k[8],20, 1163531501);
    a =gg(a,b,c,d,k[13],5, -1444681467);
    d =gg(d,a,b,c,k[2],9, -51403784);
    c =gg(c,d,a,b,k[7],14, 1735328473);
    b =gg(b,c,d,a,k[12],20, -1926607734);

    a =hh(a,b,c,d,k[5],4, -378558);
    d =hh(d,a,b,c,k[8],11, -2022574463);
    c =hh(c,d,a,b,k[11],16, 1839030562);
    b =hh(b,c,d,a,k[14],23, -35309556);
    a =hh(a,b,c,d,k[1],4, -1530992060);
    d =hh(d,a,b,c,k[4],11, 1272893353);
    c =hh(c,d,a,b,k[7],16, -155497632);
    b =hh(b,c,d,a,k[10],23, -1094730640);
    a =hh(a,b,c,d,k[13],4, 681279174);
    d =hh(d,a,b,c,k[0],11, -358537222);
    c =hh(c,d,a,b,k[3],16, -722521979);
    b =hh(b,c,d,a,k[6],23, 76029189);
    a =hh(a,b,c,d,k[9],4, -640364487);
    d =hh(d,a,b,c,k[12],11, -421815835);
    c =hh(c,d,a,b,k[15],16, 530742520);
    b =hh(b,c,d,a,k[2],23, -995338651);

    a =ii(a,b,c,d,k[0],6, -198630844);
    d =ii(d,a,b,c,k[7],10, 1126891415);
    c =ii(c,d,a,b,k[14],15, -1416354905);
    b =ii(b,c,d,a,k[5],21, -57434055);
    a =ii(a,b,c,d,k[12],6, 1700485571);
    d =ii(d,a,b,c,k[3],10, -1894986606);
    c =ii(c,d,a,b,k[10],15, -1051523);
    b =ii(b,c,d,a,k[1],21, -2054922799);
    a =ii(a,b,c,d,k[8],6, 1873313359);
    d =ii(d,a,b,c,k[15],10, -30611744);
    c =ii(c,d,a,b,k[6],15, -1560198380);
    b =ii(b,c,d,a,k[13],21, 1309151649);
    a =ii(a,b,c,d,k[4],6, -145523070);
    d =ii(d,a,b,c,k[11],10, -1120210379);
    c =ii(c,d,a,b,k[2],15, 718787259);
    b =ii(b,c,d,a,k[9],21, -343485551);

    x[0] = add32(a, x[0]);
    x[1] = add32(b, x[1]);
    x[2] = add32(c, x[2]);
    x[3] = add32(d, x[3]);
        //return Array(a,b,c,d);
    }
    function md5blk(s) { /* I figured global was faster.   */
        var md5blks = [], i; /* Andy King said do it this way. */
    for (i=0; i<64; i+=4) {
        md5blks[i >> 2] = s[i]
        + (s[i +1] << 8)
        + (s[i +2] << 16)
        + (s[i +3] << 24);
        //md5blks[i>>2] = s.charCodeAt(i)
        //+ (s.charCodeAt(i+1) << 8)
        //+ (s.charCodeAt(i+2) << 16)
        //+ (s.charCodeAt(i+3) << 24);
    }
        return md5blks;
    }

//function cmn(q, a, b, x, s, t) {
//a = add32(add32(a, q), add32(x, t));
//return add32((a << s) | (a >>> (32 - s)), b);
//}

//function ff(a, b, c, d, x, s, t) {
//return cmn((b & c) | ((~b) & d), a, b, x, s, t);
//}

//function gg(a, b, c, d, x, s, t) {
//return cmn((b & d) | (c & (~d)), a, b, x, s, t);
//}

//function hh(a, b, c, d, x, s, t) {
//return cmn(b ^ c ^ d, a, b, x, s, t);
//}

//function ii(a, b, c, d, x, s, t) {
//return cmn(c ^ (b | (~d)), a, b, x, s, t);
//}
    function cmn(q,a,b,x,s,t) {
        a = add32(add32(a,q),add32(x,t));
        return add32((a<<s)|(a>>>(32-s)),b);
        //return safe_add(bit_rol(safe_add(safe_add(a,q),safe_add(x,t)),s),b);
    }
    function ff(a,b,c,d,x,s,t) {
        return cmn((b&c)| ((~b)&d), a,b,x,s,t);
    }
    function gg(a,b,c,d,x,s,t) {
        return cmn((b&d) |(c&(~d)),a,b,x,s,t);
    }
    function hh(a,b,c,d,x,s,t) {
        return cmn(b^c^d,a,b,x,s,t);
    }
    function ii(a,b,c,d,x,s,t) {
        return cmn(c^(b |(~d)),a,b,x,s,t);
    }
    function md51(s) {
        txt = '';
        var n = s.length,
        state = [1732584193, -271733879, -1732584194, 271733878], i;
    for (i=64; i<=s.length; i+=64) {
        md5cycle(state, md5blk(s.substring(i-64, i)));
       //md5cycle(state, sb(s));
    }
        s = s.substring(i-64);
        var tail = [0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];
    for (i=0; i<s.length; i++)
        tail[i>>2] |= s.charCodeAt(i) << ((i%4) << 3);
        tail[i>>2] |= 0x80 << ((i%4) << 3);
    if (i > 55) {
        md5cycle(state, tail);
    for (i=0; i<16; i++) tail[i] = 0;
    }
        tail[14] = n*8;
        md5cycle(state, tail);
    return state;
    }
    var hex_chr = '0123456789abcdef'.split('');
    function sb(x) {
      var i;
      var nblk=((x.length+8)>>6)+1;
      var blks=new Array(nblk*16);
        for(i=0;i<nblk*16;i++) blks[i]=0;
        for(i=0;i<x.length;i++) blks[i>>2]|=x.charCodeAt(i)<<((i%4)*8);
        blks[i>>2]|=0x80<<((i%4)*8);
        blks[nblk*16-2]=x.length*8;
      //return blks;
    }
    function rhex(n)
    {
    var s='', j=0;
    for(; j<4; j++)
    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F]
      + hex_chr[(n >> (j * 8)) & 0x0F];
    return s;
    }

    function hex(x) {
    for (var i=0; i<x.length; i++)
    x[i] = rhex(x[i]);
    return x.join('');
    }
    function add32(x,y) {
        return (x + y) & 0xFFFFFFFF;
    }

    function safe_add(x,y) {
        var lsw=(x & 0xFFFF) + (y & 0xFFFF);
        var msw=(x>>16)+(y>>16)+(lsw>>16);
        return (msw<<16)|(lsw&0xFFFF);
    }
    function bit_rol(num,cnt) {
        return (num<<cnt)|(num>>>(32-cnt));
    }
  
    return this;
}

function n(n) {
   //Run a template worker and return
}

function t(t) {
    //Run a function definition to save
}

function ran(n) {
    let s=n.split("");
    s.sort(()=> 
    0.5 - Math.random()
    );
  console.log(s);
    s=s.join("");
    s=s.substring(0,7);
    return s.toUpperCase();
}

const x=x=>
function(y){
  return x(y)
};

const a=b=c=>
x(c);

var w=b(e)("export");


console.log(
    ran(w.md5("STRING"))
);

//const b=c(f);
//const a=c;
//b(f)();

  //function b(x){
    //return function(y) {
      //return x(y)
    //}
  //}

//function f() {
   //console.log("Function: "+this)
// console.log("Function: "+b)
//}

//const b = 
  //i(f);
//const b =
  //void c(f)();
//b();

//function x(){
//}
//function y(){
  //x(y)
//}
